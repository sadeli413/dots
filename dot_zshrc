# ZSHRC

# Fancy zsh colors
autoload -U colors && colors

### Added by Zinit's installer
if [[ ! -f $HOME/.zinit/bin/zinit.zsh ]]; then
    print -P "%F{33}▓▒░ %F{220}Installing %F{33}DHARMA%F{220} Initiative Plugin Manager (%F{33}zdharma/zinit%F{220})…%f"
    command mkdir -p "$HOME/.zinit" && command chmod g-rwX "$HOME/.zinit"
    command git clone https://github.com/zdharma/zinit "$HOME/.zinit/bin" && \
        print -P "%F{33}▓▒░ %F{34}Installation successful.%f%b" || \
        print -P "%F{160}▓▒░ The clone has failed.%f%b"
fi

source "$HOME/.zinit/bin/zinit.zsh"
autoload -Uz _zinit
(( ${+_comps} )) && _comps[zinit]=_zinit

# Load a few important annexes, without Turbo
# (this is currently required for annexes)
zinit light-mode for \
    zinit-zsh/z-a-rust \
    zinit-zsh/z-a-as-monitor \
    zinit-zsh/z-a-patch-dl \
    zinit-zsh/z-a-bin-gem-node

### End of Zinit's installer chunk

zinit wait lucid blockf for \
    atinit"zicompinit; zicdreplay" \
    atload"_zsh_autosuggest_start" \
    zsh-users/zsh-autosuggestions \
    Aloxaf/fzf-tab \
    zdharma/fast-syntax-highlighting \
    hlissner/zsh-autopair \
    MikeDacre/tmux-zsh-vim-titles

# Prompt
PS1="%{$fg[cyan]%}╭─[%B%{$fg[blue]%}%n%{$fg[cyan]%}@%{$fg[blue]%}%m%{$fg[cyan]%}: %~%b%{$fg[cyan]%}]
╰─%(!.#.$)%{$reset_color%} "

# Environment variables
export PATH=$PATH:$HOME/.local/bin
export EDITOR=nvim                          # Chezmoi edit
export ZOOM_HOME=$HOME/zoomus               # Docker zoom-us
export NVIM_LISTEN_ADDRESS=/tmp/nvimsocket  # vimtex shift click
export ZSH_AUTOSUGGEST_HIGHLIGHT_STYLE="fg=242"  # zsh-autosuggestions colors

# zsh history
export HISTFILE=$HOME/.zsh_history
export HISTSIZE=10000
export SAVEHIST=10000
setopt appendhistory

# fzf-tab
source $HOME/.config/fzf/completion.zsh
source $HOME/.config/fzf/key-bindings.zsh
# disable sort when completing `git checkout`
zstyle ':completion:*:git-checkout:*' sort false
# set descriptions format to enable group support
zstyle ':completion:*:descriptions' format '[%d]'
# set list-colors to enable filename colorizing
zstyle ':completion:*' list-colors ${(s.:.)LS_COLORS}
# preview directory's content with exa when completing cd
zstyle ':fzf-tab:complete:cd:*' fzf-preview 'exa -1 --color=always $realpath'
# switch group using `,` and `.`
zstyle ':fzf-tab:*' switch-group ',' '.'


# Aliases
alias lc='ls --color=none'
alias ls='exa --icons'                           # Fancy ls
alias la='exa --icons -lgaa --git --color-scale'  # Fancy ls -la
alias l='exa --icons -lg --git --color-scale'     # Fancy ls -l
alias tree="exa --icons -T"
alias vim='nvim'
alias cme='chezmoi edit'
alias ssh='TERM=xterm-256color ssh' # So ssh works properly with kitty
alias cp="cp -i"                    # Confirm before overwriting something
alias df='df -h'
alias du='du . -h -d1 2>/dev/null | sort -hr'
alias cd..='cd ..'
alias cl='clear'
alias icat='kitty +kitten icat'
alias locate='plocate'

# pywal persistence
(cat ~/.cache/wal/sequences &)
source ~/.cache/wal/colors-tty.sh

# autocorrect
# eval $(thefuck --alias)

# kitty +kitten icat "$(find $HOME/Downloads/afterdark -type f -iname '*.png' -o -iname '*.jpg' -o -iname '*.jpeg' | shuf -n 1)"

# keybinds
bindkey -e
bindkey "^[[3~" delete-char     # Make 'delete' actually delete
bindkey \^U backward-kill-line  # Ctrl-U works as in bash
bindkey "^[[1;5C" forward-word  # Ctrl-right moves right a word
bindkey "^[[1;5D" backward-word # Ctrl-left moves left a word
bindkey "^[[Z" autosuggest-accept # Accept suggestion from zsh-autosuggestions
bindkey "^ " autosuggest-execute  # Accept and execute suggestion from zsh-autosuggest
